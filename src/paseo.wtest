import Familia.*
import Ninio.*
import Ropa.*

describe "test de una familia que NO pasea" {

	
	var mediaIzquierda = new ParIzquierdo(desgaste = 1,talle = s,abrigo = 1) 
	var mediaDerecha = new ParDerecho(desgaste = 3,talle =s ,abrigo = 1)
	
	//prenda par, la media izquierda tiene que tener 1 de desgaste, la derecha 3, el abrigo es default 0
    var mediasZoe = new RopaAPares(talle=s,parIzquierdo = mediaIzquierda,parDerecho = mediaDerecha,desgaste = 0,abrigo = 0) 
	
	//prenda par, el izquierdo y derecho tiene los valores default (desgaste 0, abrigo 1)
	var zapaIzq = new ParIzquierdo(desgaste = 0,talle =s ,abrigo = 1)
	var zapaDer = new ParDerecho(desgaste = 0,talle =s ,abrigo = 1)
	var zapatillasZoe = new RopaAPares(talle=s,parIzquierdo = zapaIzq,parDerecho = zapaDer,desgaste = 0,abrigo = 0) 
	 
	
	//prenda pesada con 5 de abrigo
	var jeanZoe = new RopaPesada(talle=s, abrigo=5,desgaste = 0) 
	
	//prenda liviana con desgaste default: 0
	var remeraZoe = new RopaLiviana(talle=s,desgaste = 0,abrigo = 1)//TODO no se como el object valorAbrigo en RopaLiviana
	
	
	// prenda pesada con desgaste default: 0
	var camperaZoe = new RopaPesada(talle=s,desgaste = 0,abrigo = 3) 

	//un juguete para ni침os de 5 a 100 anios
	var ukelele = new Juguete(edadMinima=5, edadMaxima =100)
	
	//prenda liviana con un desgaste de 5
	var remeraMilena = new RopaLiviana(talle=xs, desgaste=5,abrigo = 1) //prenda liviana
	//prenda liviana con desgaste default: 0
	var calzaMilena = new RopaLiviana(talle=xs,desgaste = 0,abrigo = 1) //prenda liviana

	//prenda par, la ojota izquierda tiene que tener 1 de desgaste y 2 de abrigo, la ojota derecha tiene 3 de desgaste y 3 de abrigo
	var ojotaIzq = new ParIzquierdo(desgaste =1,abrigo=2,talle =xs)
	var ojotaDer = new ParDerecho(desgaste = 3,abrigo=3,talle =xs)
    var ojotasMilena = new RopaAPares(talle=l,parIzquierdo = ojotaIzq,parDerecho=ojotaDer,desgaste=0,abrigo=0) 
	
	//ninio
	var zoe = new Ninio(talle=s, edad=11, prendas=#{mediasZoe, zapatillasZoe, jeanZoe, remeraZoe, camperaZoe }) 
	//ninio problematico
	var milena = new Ninio(talle=xs, edad=2, prendas = #{remeraMilena, calzaMilena, ojotasMilena }, juguete=ukelele)
	
	//familia	
	//var familiaAptaSalir = new XXX(ninios = #{ zoe})

	//familia	
	//var familiaNoAptaParaSalir= new XXX(ninios = #{milena, zoe})
	
	
//PUNTO 1	
	test "comodidad" {
		
		assert.equals(6 , mediasZoe.nivelDeComodidad(zoe) )
		assert.equals(8 , zapatillasZoe.nivelDeComodidad(zoe))
		assert.equals(8 , jeanZoe.nivelDeComodidad(zoe))
		assert.equals(10 ,remeraZoe.nivelDeComodidad(zoe))
		assert.equals(8 , camperaZoe.nivelDeComodidad(zoe))
//		assert.equals(7 , /* comodida de las remeraMilena*/)		
//		assert.equals(10 , /* comodida de las calzaMilena*/)
//		assert.equals(-3 , /* comodida de las ojotasMilena*/)
}
/*

//PUNTO 2		
	test "intercambiar pares ok" {
		var mediaIzq = mediasZoe.izquierdo()
		var mediaDer = mediasZoe.derecho()
		var zapaIzq = zapatillasZoe.izquierdo()
		var zapaDer = zapatillasZoe.derecho()
		
		mediasZoe.intercambiar(zapatillasZoe)

		assert.equals(mediaIzq, mediasZoe.izquierdo())
		assert.equals(mediaDer, zapatillasZoe.derecho())
		assert.equals(zapaIzq, zapatillasZoe.izquierdo())
		assert.equals(zapaDer, mediasZoe.derecho())
				
	}
	
	test "intercambiar pares no ok" {
		//Que sucede si intercambio un par de talles distinto?
		//probar el cambio entre las ojotas de milena y las medias de zoe
		//El test est치 incompleto!
		ojotasMilena.intercambiar(mediasZoe)
	}

//PUNTO 3	
//	test "nivel de abrigo" {
//		assert.equals(2 , /* abrigo de mediasZoe*///)
//		assert.equals(2 , /* abrigo de zapatillasZoe*/)
//		assert.equals(5 , /* abrigo de jeanZoe */)
//		assert.equals(1 , /* abrigo de remeraZoe*/)
//		assert.equals(3 , /* abrigo de camperaZoe*/)
//		assert.equals(1 , /* abrigo de remeraMilena*/)		
//		assert.equals(1 , /* abrigo de calzaMilena*/)
//		assert.equals(5 , /* abrigo de ojotasMilena*/)
//	}

/* 
//PUNTO 4		
	test "puede salir de paseo" {
		assert.that(familiaAptaSalir.puedePasear())
		assert.notThat(familiaNoAptaParaSalir.puedePasear())
	}
//PUNTO 5
	
	test "infaltables" {
		assert.equals(#{jeanZoe,calzaMilena}, familiaNoAptaParaSalir.infaltables())		
	}
	//Punto 7 
	
	test "chiquitos" {
		assert.equals(#{milena}, familiaNoAptaParaSalir.chiquitos() 
		)		
	} 
	
	
//PUNTO 6	
/* 
test "salir de paseo ok" {
		familiaAptaSalir.pasear()
		assert.equals(1.8 , mediaIzquierda.desgaste())
		assert.equals(4.2 , mediaDerecha.desgaste())
		assert.equals(3 , mediasZoe.desgaste())
		assert.equals(1 , zapatillasZoe.desgaste())
		assert.equals(1 , jeanZoe.desgaste())
		assert.equals(1 , remeraZoe.desgaste())
		assert.equals(1 , camperaZoe.desgaste())
		
		
		
	}
//PUNTO 6	
	test "salir de paseo no ok" {
		//Que sucede si le pido pasear a una familia que no est치 lista?
		//El test est치 incompleto!
		familiaNoAptaParaSalir.pasear()
	}
	
	*/
	
	
}